{"version":3,"sources":["webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.yaml","webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.less","webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.html?91e4","webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.less?4ff3","webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.html","webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.js?7c50","webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.js","webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.less?4234","webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.vue","webpack:///./src/components/VocabularyTranslator/VocabularyTranslator.yaml?d1d3"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA,kCAAkC,MAAM,8BAA8B,UAAU,uBAAuB;AACvG;AACA;;;;;;;;;;;;ACJA,2BAA2B,mBAAO,CAAC,2GAAsD;AACzF;AACA,cAAc,QAAS,UAAU,+IAA+I;;;;;;;;;;;;;ACFhL;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE,eAAe,iCAAiC;AAChD,iBAAiB,wBAAwB;AACzC,mBAAmB,uBAAuB;AAC1C,uBAAuB,SAAS,0BAA0B,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C,uBAAuB,4CAA4C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC,mBAAmB;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC,mBAAmB,wBAAwB;AAC3C,uBAAuB,SAAS,2BAA2B,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C,uBAAuB,6CAA6C;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC,qBAAqB;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC,qBAAqB;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9HA;;AAEA;AACA,cAAc,mBAAO,CAAC,yhBAAwQ;AAC9R,4CAA4C,QAAS;AACrD;AACA;AACA,UAAU,mBAAO,CAAC,6HAAgE;AAClF,+CAA+C;AAC/C;AACA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;ACVf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA,wCAAuE,CAAgB,wJAAG,EAAC,C;;;;;;;;;;;;ACA3F;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH,W;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,2CAA2C;AACvE,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP,qBAAqB,6BAA6B;AAClD;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;;AAEA;AACA,KAAK;AACL;AACA,2CAA2C,KAAK;AAChD,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEe,kE;;;;;;;;;;;;ACrLf;AAAA;AAAA;AAAA;AAAyU,CAAgB,mXAAG,EAAC,C;;;;;;;;;;;;ACA7V;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgH;AACzC;AACL;AACwC;;;AAG1G;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B,EAAE,yFAAM;AACR,EAAE,4GAAM;AACR,EAAE,qHAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACwL;AACxL,WAAW,yMAAM,iBAAiB,iNAAM;;AAExC;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;AC3Cf;AAAA;AAAA;AAAA;AAAoP,CAAgB,yTAAG,EAAC,C","file":"components/VocabularyTranslator.js","sourcesContent":["module.exports = function (Component) {\n  Component.options.__i18n = Component.options.__i18n || []\n  Component.options.__i18n.push('{\"en\":{\"TEST_MESSAGE\":\"Test Message\"},\"zh-TW\":{\"TEST_MESSAGE\":\"測試訊息\"}}')\n  delete Component.options._Ctor\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"VocabularyTranslator.less?vue&type=style&index=0&id=0d37a34f&lang=less&scoped=true&\"}]);\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"form\", { staticClass: \"VocabularyTranslator ui grid form\" }, [\n    _c(\"div\", { staticClass: \"equal width row\" }, [\n      _c(\"div\", { staticClass: \"column\" }, [\n        _c(\"div\", { staticClass: \"field\" }, [\n          _c(\"label\", { attrs: { for: \"vocabulary_input\" } }, [\n            _vm._v(_vm._s(_vm.$t(\"Vocabulary Input\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\"textarea\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.db.localConfig.vocabularyInput,\n                expression: \"db.localConfig.vocabularyInput\"\n              }\n            ],\n            attrs: { id: \"vocabulary_input\" },\n            domProps: { value: _vm.db.localConfig.vocabularyInput },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(\n                  _vm.db.localConfig,\n                  \"vocabularyInput\",\n                  $event.target.value\n                )\n              }\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"ui fluid button\",\n              class: _vm.computedTranslateButtonClassList,\n              attrs: { type: \"button\" },\n              on: { click: _vm.startTranslate }\n            },\n            [\n              _vm._v(\n                \"\\n              \" +\n                  _vm._s(_vm.$t(\"Translate\")) +\n                  \"\\n            \"\n              )\n            ]\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"column\" }, [\n        _c(\"div\", { staticClass: \" field\" }, [\n          _c(\"label\", { attrs: { for: \"vocabulary_output\" } }, [\n            _vm._v(_vm._s(_vm.$t(\"Vocabulary Output\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\"textarea\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.db.localConfig.vocabularyOutput,\n                expression: \"db.localConfig.vocabularyOutput\"\n              }\n            ],\n            attrs: { id: \"vocabulary_output\" },\n            domProps: { value: _vm.db.localConfig.vocabularyOutput },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(\n                  _vm.db.localConfig,\n                  \"vocabularyOutput\",\n                  $event.target.value\n                )\n              }\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"ui fluid buttons\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"ui button\",\n                class: _vm.computedCopyButtonClassList,\n                attrs: { type: \"button\" },\n                on: { click: _vm.copy }\n              },\n              [\n                _vm._v(\n                  \"\\n              \" + _vm._s(_vm.$t(\"Copy\")) + \"\\n            \"\n                )\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"ui button\",\n                class: _vm.computedAddDictionaryButtonClassList,\n                attrs: { type: \"button\" },\n                on: { click: _vm.addDictionary }\n              },\n              [\n                _vm._v(\n                  \"\\n              \" +\n                    _vm._s(_vm.$t(\"Add to Dictionary\")) +\n                    \"\\n            \"\n                )\n              ]\n            )\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./VocabularyTranslator.less?vue&type=style&index=0&id=0d37a34f&lang=less&scoped=true&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"65259d88\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./VocabularyTranslator.less?vue&type=style&index=0&id=0d37a34f&lang=less&scoped=true&\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./VocabularyTranslator.less?vue&type=style&index=0&id=0d37a34f&lang=less&scoped=true&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./VocabularyTranslator.html?vue&type=template&id=0d37a34f&scoped=true&\"","import mod from \"-!./VocabularyTranslator.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./VocabularyTranslator.js?vue&type=script&lang=js&\"","let app = {\r\n  props: ['db'],\r\n  components: {\r\n    // DataTaskManager: () => import(/* webpackChunkName: \"components/DataTaskManager\" */ './DataTaskManager/DataTaskManager.vue')\r\n  },\r\n  data () {    \r\n    this.$i18n.locale = this.db.localConfig.locale\r\n    return {\r\n      isWaiting: false\r\n    }\r\n  },\r\n  watch: {\r\n    'db.localConfig.locale'() {\r\n      this.$i18n.locale = this.db.localConfig.locale;\r\n    },\r\n    'db.localConfig.vocabularyInput'() {\r\n      this.db.localConfig.setVocabularyTime = (new Date()).getTime()\r\n    },\r\n  },\r\n  computed: {\r\n    computedTranslateButtonClassList () {\r\n      let classList = ['ui', 'fluid']\r\n\r\n      let vocabularyInput = this.db.localConfig.vocabularyInput\r\n      if (vocabularyInput.trim() === '' || this.isWaiting === true) {\r\n        classList.push('disabled') \r\n      }\r\n      else if (this.db.localConfig.setVocabularyTime > this.db.localConfig.translateTime) {\r\n        classList.push('positive')\r\n      }\r\n\r\n      classList.push('button')\r\n\r\n      return classList\r\n    },\r\n    computedAddDictionaryButtonClassList () {\r\n      let classList = ['ui']\r\n\r\n      let vocabularyOutput = this.db.localConfig.vocabularyOutput\r\n      if (vocabularyOutput.trim && vocabularyOutput.trim() === '') {\r\n        classList.push('disabled')\r\n      }\r\n\r\n      classList.push('button')\r\n      \r\n      return classList\r\n    },\r\n    computedCopyButtonClassList () {\r\n      let classList = ['ui']\r\n\r\n      let vocabularyOutput = this.db.localConfig.vocabularyOutput\r\n      if (vocabularyOutput.trim && vocabularyOutput.trim() === '') {\r\n        classList.push('disabled')\r\n      }\r\n      else if (this.db.config.vocabularyOutputCopied === false) {\r\n        classList.push('positive')\r\n      }\r\n\r\n      classList.push('button')\r\n      \r\n      return classList\r\n    }\r\n  },\r\n  mounted() {\r\n    \r\n  },\r\n  methods: {\r\n    startTranslate: async function() {\r\n      this.isWaiting = true\r\n\r\n      // =================================================================\r\n\r\n      let vocabularyList = this.parseVocabularies()\r\n\r\n      let vocabularyCached = this.checkCachedVocabularies(vocabularyList)\r\n\r\n      let vocabulariesToQuery = this.parseVocabulariesToQuery(vocabularyCached)\r\n      // console.log(vocabulariesToQuery)\r\n\r\n      // =================================================================\r\n\r\n      let vocabularyCachedQueried\r\n      if (vocabulariesToQuery.length > 0) {\r\n        let url = this.db.config.appsScriptsURL\r\n        url = url + '?v=' + encodeURI(vocabulariesToQuery.join(';')) +\r\n          '&ls=' + this.db.localConfig.languageSource +\r\n          '&lt=' + this.db.localConfig.languageTarget\r\n\r\n        // console.log(url)\r\n        // return false\r\n        let result = await this.db.utils.AxiosUtils.get(url)\r\n\r\n        // =================================================================\r\n\r\n        vocabularyCachedQueried = this.cacheQueryResult(result.output, vocabularyCached)\r\n      }\r\n      else {\r\n        vocabularyCachedQueried = vocabularyCached\r\n      }\r\n\r\n      let vocabularyOutput = this.flatVocabularyCachedQueried(vocabularyCachedQueried)\r\n\r\n      // =================================================================\r\n      // console.log(vocabularyOutput)\r\n      this.db.localConfig.vocabularyOutput = vocabularyOutput.join('\\n')\r\n        \r\n\r\n      // =================================================================\r\n      \r\n      this.db.localConfig.translateTime = (new Date()).getTime()\r\n      this.isWaiting = false\r\n      this.db.config.vocabularyOutputCopied = false\r\n    },\r\n    parseVocabularies: function () {\r\n      let output =  this.db.localConfig.vocabularyInput.trim().split('\\n').filter((line) => line.trim() !== '').map(l => l.trim())\r\n      return [...new Set(output)]\r\n    },\r\n    buildCacheKey: function (vocabulary) {\r\n      return vocabulary + ';' + this.db.localConfig.languageSource + ';' + this.db.localConfig.languageTarget\r\n    },\r\n    checkCachedVocabularies: function (vocabularyList) {\r\n      return vocabularyList.map(vocabulary => {\r\n        let key = this.buildCacheKey(vocabulary)\r\n\r\n        if (this.db.localConfig.queryCache[key]) {\r\n          return {\r\n            vocabulary,\r\n            note: this.db.localConfig.queryCache[key]\r\n          }\r\n        }\r\n\r\n        // @TODO 這裡還需要加入字典的查詢\r\n\r\n        return {\r\n          vocabulary,\r\n          note: null\r\n        }\r\n      })\r\n    },\r\n    parseVocabulariesToQuery: function (vocabularyCached) {\r\n      return vocabularyCached.filter(v => v.note === null).map(v => v.vocabulary)\r\n    },\r\n    cacheQueryResult: function (result, vocabularyCached) {\r\n      let resultMap = {}\r\n      result.split('\\n').forEach(line => {\r\n        if (line.indexOf('/') === -1) {\r\n          return false\r\n        }\r\n\r\n        let vocabulary = line.slice(0, line.indexOf('/')).trim()\r\n\r\n        resultMap[vocabulary] = line\r\n\r\n        let key = this.buildCacheKey(vocabulary)\r\n        this.db.localConfig.queryCache[key] = line\r\n      })\r\n\r\n      for (let i = 0; i < vocabularyCached.length; i++) {\r\n        if (vocabularyCached[i].note) {\r\n          continue\r\n        }\r\n\r\n        let {vocabulary} = vocabularyCached[i]\r\n        vocabularyCached[i].note = resultMap[vocabulary]\r\n      }\r\n\r\n      return vocabularyCached\r\n    },\r\n    flatVocabularyCachedQueried: function (vocabularyCachedQueried) {\r\n      return vocabularyCachedQueried.map(({note}) => note)\r\n    },\r\n    copy: function () {\r\n      this.db.utils.ClipboardUtils.copyPlainString(this.db.localConfig.vocabularyOutput)\r\n      this.db.config.vocabularyOutputCopied = true\r\n    },\r\n    addDictionary: function() {\r\n      alert('Add dictionary')\r\n    }\r\n  }\r\n}\r\n\r\nexport default app","import mod from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./VocabularyTranslator.less?vue&type=style&index=0&id=0d37a34f&lang=less&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./VocabularyTranslator.less?vue&type=style&index=0&id=0d37a34f&lang=less&scoped=true&\"","import { render, staticRenderFns } from \"./VocabularyTranslator.html?vue&type=template&id=0d37a34f&scoped=true&\"\nimport script from \"./VocabularyTranslator.js?vue&type=script&lang=js&\"\nexport * from \"./VocabularyTranslator.js?vue&type=script&lang=js&\"\nimport style0 from \"./VocabularyTranslator.less?vue&type=style&index=0&id=0d37a34f&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0d37a34f\",\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./VocabularyTranslator.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=%2Fapp%2Fsrc%2Fcomponents%2FVocabularyTranslator%2FVocabularyTranslator.vue&lang=yaml\"\nif (typeof block0 === 'function') block0(component)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/app/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0d37a34f')) {\n      api.createRecord('0d37a34f', component.options)\n    } else {\n      api.reload('0d37a34f', component.options)\n    }\n    module.hot.accept(\"./VocabularyTranslator.html?vue&type=template&id=0d37a34f&scoped=true&\", function () {\n      api.rerender('0d37a34f', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/VocabularyTranslator/VocabularyTranslator.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./VocabularyTranslator.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=%2Fapp%2Fsrc%2Fcomponents%2FVocabularyTranslator%2FVocabularyTranslator.vue&lang=yaml\"; export default mod; export * from \"-!../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./VocabularyTranslator.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=%2Fapp%2Fsrc%2Fcomponents%2FVocabularyTranslator%2FVocabularyTranslator.vue&lang=yaml\""],"sourceRoot":""}